<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title><%= yield :title -%></title>
  <%= stylesheet_link_tag 'ovirt-tree/tree' %>
  <%= stylesheet_link_tag 'facebox' %>

  <%= javascript_include_tag "jquery-1.2.6.min.js" -%>
  <%= javascript_include_tag "jquery.ui-1.5.2/ui/packed/ui.core.packed.js" -%>
  <%= javascript_include_tag "test/storage_tree_sample_data.js" -%>
  <%= javascript_include_tag "test/smart_nav_sample_data.js" -%>
  <%= javascript_include_tag "jquery.form.js" -%>
  <%= javascript_include_tag "trimpath-template-1.0.38.js" %>
  <%= javascript_include_tag "ovirt.js" %>
  <%= javascript_include_tag "ovirt.tree.js" %>
  <%= javascript_include_tag "facebox.js" %>
  <script type="text/javascript">
      var currentDomTreeElem = 'storage_volumes_tree', treeObject;
    $(document).ready(function(){
      //initialize tree widget
      $('#nav_tree').tree({
          content: {"pools" : pools3.pools},
          clickHandler: myClickHandler,
          cacheContent: false
      });
      /* $('#some_tree').tree({
          content: {"pools" : pools3.pools},
          toggle: myToggler
      });*/
      $('#storage_volumes_tree').tree({
        content: {"pools" : storage_pools.pools},
        template : 'storage_tree_template',
        clickHandler: myClickHandler,
        channel: 'STORAGE_VOLUME',
        refresh: refreshPostHandler,
        cacheContent: true
      });
      $('#swap_button').bind('click', function(event){
          var newDomTreeElem;
          if (currentDomTreeElem === 'storage_volumes_tree') {
              newDomTreeElem = 'temp_storage_tree';
          } else { newDomTreeElem = 'storage_volumes_tree'}
          $('#' + currentDomTreeElem).clone().attr({style: 'background:green',id: newDomTreeElem}).appendTo('body').end().remove();
          currentDomTreeElem = newDomTreeElem;
      });
      $('#refresh_button').bind('click', function(event){
          $('ul.ovirt-tree').trigger('STORAGE_VOLUME', data_snippet);
      });
      $('#empty_button').bind('click', function(event){
          $('#' + currentDomTreeElem).empty();
      });
      $('#populate_button').bind('click', function(event){
          $('#' + currentDomTreeElem).tree({
            content: treeObject.content,
            template : 'storage_tree_template',
            clickHandler: myClickHandler,
            selectedNodes: treeObject.selectedNodes,
            channel: 'STORAGE_VOLUME',
            refresh: refreshPostHandler,
            cacheContent: true
          });
      });
      $('#return_button').bind('click', function(event){
          treeObject = $('#' + currentDomTreeElem).data('tree').options;
      });
      $('#toggle_button').bind('click', function(e) {
          $('#' + currentDomTreeElem).toggle();
      });
      $('#open_button').bind('click', function(event){
          $('#' + currentDomTreeElem).tree('openToSelected');
      });
      $('#show_button').bind('click', function(event){
          $.facebox('');
          $('#' + currentDomTreeElem).clone().appendTo('td.body > div.content').end().remove();
          $('#populate_button').trigger('click');
      });
    });

    function myToggler(e, elem) {
        if ($(e.target).is('span.hitarea')){
            alert('Yay, I am a custom toggler!');
        }
    }

    function refreshPostHandler(e, self, data) {
        //alert('I am ' + self.element.get(0).id + ', and I have a parent of ' + self.getData('sourceID'));
    }

    function myClickHandler(e, elem) {
        //VmCreator.test(elem.element.get(0).id);
        if ($(e.target).is('div') && $(e.target).parent().is('li')){
          $(e.target)
          .toggleClass('current');
        }
        if ($(e.target).is('img') && $(e.target).parent().is('a')){
            alert('I got yer link right hea! (' + e.target + ')');
            e.preventDefault();
        }
    }

    var data_snippet = [{
          "selected":false,
          "name":"LVM: test_lvm:test_lun3_2",
          "available":true,
          "children":[],
          "create_volume":false,
          "id":13,
          "type":"LvmStorageVolume",
          "ui_object": "LvmStorageVolume_13",
          "ui_parent": "IscsiStorageVolume_4"
        }];

  </script>
 </head>

 <body>
   <button id="swap_button">Swap Tree</button>
   <button id="refresh_button">refresh</button>
   <button id="empty_button">Empty Tree</button>
   <button id="populate_button">Populate Storage Tree</button>
   <button id="return_button">Store Tree Info</button>
   <button id="toggle_button">Toggle Visibility</button>
   <button id="open_button">Open To Selected</button>
   <button id="show_button">Show tree in facebox</button>
     <form id="nav_tree_form">
         <ul id="nav_tree" class="ovirt-tree"></ul>
     </form>
     <br/><br/><br/><br/>
     <form id="some_tree_form">
         <ul id="some_tree" class="ovirt-tree"></ul>
     </form>
     <textarea id="tree_template" style="display:none;">
      {macro htmlList(list, optionalListType)}
        {var listType = optionalListType != null ? optionalListType : "ul"}
        <${listType} style="display:none;">
          {for item in list}
            <li>
              <input type="checkbox" name="item[]" value="${item.id}-${item.name}" style="display:none" checked="checked"/>
              <span class="hitarea {if item.children} expandable{/if}">&nbsp;</span><div id="${item.id}" class="${item.type}">${item.name}</div>
              {if item.children}
                ${htmlList(item.children)}
              {/if}
            </li>
          {/for}
        </${listType}>
      {/macro}

      {for item in pools}
        <li>
          <input type="checkbox" name="item[]" value="${item.id}-${item.name}" style="display:none" checked="checked"/>
          <span class="hitarea {if item.children} expandable{/if}">&nbsp;</span><div id="${item.id}" class="${item.type}">${item.name}</div>
          {if item.children}
            ${htmlList(item.children)}
          {/if}
        </li>
      {/for}
     </textarea>

    <div id="tree_placeholder">
     <form id="storage_tree_form">
       My Name: <input type="text" name="my_name"/>
       <div>
         <ul id="storage_volumes_tree" class="ovirt-tree"></ul>
       </div>
     </form>
    </div>
     <textarea id="storage_tree_template" style="display:none;">
       {macro htmlList(list, id, isFullList)}
        {if isFullList}
        <ul style="display:none;">
        {/if}
          {for item in list}
            <li>
              <span class="hitarea {if item.children.length > 0} expandable{/if}">&nbsp;</span>
              <div id="${id}-${item.ui_object}" class="{if !item.available} unclickable{/if}">
                <input type="checkbox" name="vm[storage_volume_ids][]" value="${item.id}"
                  {if !item.available}disabled="disabled" style="display:none"{/if}
                  {if item.selected}checked="checked"{/if}/> ${item.name} {if item.size}(${item.size} GB){/if}
                  {if item.create_volume}
                    <input type="hidden" name="return_item" value="true"/><%=image_tag("icon_addstorage.png")%>
                    <a href="<%= url_for :controller => 'storage', :action => 'new_volume'%>?source_volume_id=${item.id}"
                      class="selection_facebox"></a>
                  {/if}
              </div>
              {if item.children.length > 0}
                ${htmlList(item.children, id, true)}
              {/if}
            </li>
          {/for}
        {if isFullList}
        </ul>
        {/if}
      {/macro}

      ${htmlList(pools, id)}
     </textarea>
 </body>
</html>
