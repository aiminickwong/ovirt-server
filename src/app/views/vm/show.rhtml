<%- content_for :title do -%>
  <%=h @vm.description %>
<%- end -%>

<%- content_for :action_links do -%>
  <%if @can_control_vms and @vm.has_console -%>
    <%= link_to image_tag("icon_x_11px.png") + " Open Console",
                          {:controller => 'vm', :action => 'console', :id => @vm},
                          :id=>"vnc_console_link" %>
    <script type="text/javascript">
      $('#vnc_console_link').bind('click', function(){
              window.open($(this).attr('href'),'console','toolbar=no,height=300,width=400,resizable=no,status=no,scrollbars=no,menubar=no,location=no');
              return false;})
    </script>
  <% end -%>
  <%if @can_modify -%>
    <%= link_to image_tag("icon_edit_11px.png") + " Edit",
                          {:controller => 'vm', :action => 'edit', :id => @vm},
                          :rel=>"facebox[.bolder]", :class=>"selection_facebox" %>
    <% for name, action in @actions %>
      <% if action[:popup_action] -%>
        <%= link_to image_tag(action[:icon]) + action[:label],
                          {:controller => 'vm',
                           :action => action[:popup_action], :id => @vm},
                          :rel=>"facebox[.bolder]", :class=>"selection_facebox" %>
      <% else -%>
        <a href="#" onClick="single_vm_action('<%= name %>')">
          <%= image_tag action[:icon] %> <%= action[:label] %>
        </a>
      <% end -%>
    <% end %>
    <a href="#confirm_cancel"  rel="facebox[.bolder]">
      <%= image_tag "icon_cancel_11px.png" %> Cancel queued tasks
    </a> 
    <a href="#confirm_delete"  rel="facebox[.bolder]">
      <%= image_tag "icon_delete_11px.png" %> Delete
    </a> 
  <% end -%>
<% end -%>
<%= confirmation_dialog("confirm_cancel", "Are you sure?", "cancel_queued_tasks()") %>
<%= confirmation_dialog("confirm_delete", "Are you sure?", "delete_vm()") %>
<script type="text/javascript">
  function cancel_queued_tasks()
  {
    $(document).trigger('close.facebox');
    $.post('<%= url_for :controller => "vm", :action => "cancel_queued_tasks", :id => @vm %>',
          function(data,status){
            refresh_summary('vms_selection',
                        '<%= url_for :controller => "vm",
                                     :action => "show" %>',
                        <%= @vm.id %>);
            $("#vms_grid").flexReload();
            if (data.alert) {
              $.jGrowl(data.alert);
            }
          }, 'json');
  }
  function delete_vm()
  {
    $(document).trigger('close.facebox');
    $.post('<%= url_for :controller => "vm", :action => "destroy", :id => @vm %>',
           {x: 1},
            function(data,status){
              $("#vms_grid").flexReload();
              if (data.alert) {
                $.jGrowl(data.alert);
              }
	      empty_summary('vms_selection', 'Virtual Machine');
            }, 'json');
  }
  function single_vm_action(action)
  {
      $.post('<%= url_for :controller => "vm", :action => "vm_action", :id => @vm %>',
             {vm_action: action},
              function(data,status){
                refresh_summary('vms_selection', 
                            '<%= url_for :controller => "vm", 
                                         :action => "show" %>',
                            <%= @vm.id %>)
                $("#vms_grid").flexReload()
		if (data.alert) {
		  $.jGrowl(data.alert);
                }
               }, 'json');
  }
</script>

    <div id="vms_selection_id" style="display:none"><%= @vm.id %></div>
    <div class="selection_key">
        Uuid:<br/>
        <%= @vm.forward_vnc ? "VNC uri:<br/>" : "" %>
	Num vcpus allocated:<br/>
	Num vcpus used:<br/>
	Memory allocated:<br/>
	Memory used:<br/>
	vNIC MAC address:<br/>
	Boot device:<br/>
        Provisioning source:<br/>
	State:<br/>
	Pending State:<br/>
    </div>
    <div class="selection_value">
       <%=h @vm.uuid %><br/>
       <%= url = request.url
           url = request.url[0..(url.index('/', 8) - 1)] + ":" + @vm.forward_vnc_port.to_s
           @vm.forward_vnc ? (url + "<br/>") : "" %>
       <%=h @vm.num_vcpus_allocated %><br/>
       <%=h @vm.num_vcpus_used %><br/>
       <%=h @vm.memory_allocated_in_mb %> MB<br/>
       <%=h @vm.memory_used_in_mb %> MB<br/>
       <%=h @vm.vnic_mac_addr %><br/>
       <%=h @vm.boot_device %><br/>
       <%=h @vm.provisioning_and_boot_settings %><br/>
       <%=h @vm.state %>
       <%unless @vm.needs_restart.nil? or @vm.needs_restart == 0  -%>
         (needs restart)
       <% end -%><br/>
       <%=h @vm.get_pending_state %>
    </div>

<!-- FIXME: show storage volumes
<% if !@vm.storage_volumes.empty? %>
  <%= render :partial => "/storage/list_volumes", :locals => { :storage_volumes => @vm.storage_volumes, :remove_from_host => false, :vm_id => @vm.id } %>
<% else %>
<p>No attached Storage Volumes</p>
<% end %>
-->

<!-- FIXME: need to show tasks
                  <%= render :partial => "/task/list_table", :locals => { :tasks => @vm.tasks, :type => "VM" } %>
-->
