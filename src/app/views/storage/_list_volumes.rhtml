<% for type in StoragePool::STORAGE_TYPES.keys %>
<% type_volumes = storage_volumes.select {|volume| volume[:type] == StoragePool::STORAGE_TYPES[type]+"StorageVolume"} %>
<%unless type_volumes.empty? %>
<div class="data-section-header"><strong><%= type %></strong></div>
<table class="listing">
<thead>
<tr>
  <th class="empty">ip <%if type == StoragePool::ISCSI -%>: port<%end -%></th>
  <th>type</th>
<%if type == StoragePool::ISCSI -%>
  <th>target</th>
  <th>LUN</th>
<%elsif type == StoragePool::NFS -%>
  <th>export path</th>
<% end -%>
  <th>size <span class="unit">(gigs)</span></th>
</tr>
</thead>
<tbody>
<% for storage_volume in type_volumes %>
<tr class="<%= cycle('odd','even', :name => type_volumes) %>">
  <% vol_hash = { :controller => 'storage_volume', :action => 'show', :id => storage_volume }
     vol_hash[:vm_id] = vm_id if defined? vm_id
  %>
  <td style="text-align:left;"><%= link_to storage_volume.storage_pool.ip_addr, vol_hash, { :class => "show" } %>
    <%if type == StoragePool::ISCSI -%><span class="secondary">:<%= storage_volume.storage_pool.port %></span><% end -%></td>
  <td><%= storage_volume.storage_pool.get_type_label %></td>
<%if type == StoragePool::ISCSI -%>
  <td><%= storage_volume.storage_pool[:target] %></td>
  <td><%= storage_volume.lun %></td>
<%elsif type == StoragePool::NFS -%>
  <td><%= "#{storage_volume.storage_pool.export_path}/#{storage_volume.filename}" if storage_volume[:type] == "NfsStorageVolume" %></td>
<% end -%>
  <td><%= storage_volume.size_in_gb %></td>
</tr>
<% end %>
</table>
<% end %>
<% end %>
